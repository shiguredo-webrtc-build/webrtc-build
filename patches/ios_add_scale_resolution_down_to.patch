diff --git a/sdk/objc/api/peerconnection/RTCRtpEncodingParameters.h b/sdk/objc/api/peerconnection/RTCRtpEncodingParameters.h
index 1f75152dcd..538f2121db 100644
--- a/sdk/objc/api/peerconnection/RTCRtpEncodingParameters.h
+++ b/sdk/objc/api/peerconnection/RTCRtpEncodingParameters.h
@@ -22,6 +22,12 @@ typedef NS_ENUM(NSInteger, RTCPriority) {
   RTCPriorityHigh
 };
 
+RTC_OBJC_EXPORT
+@interface RTC_OBJC_TYPE (RTCResolutionRestriction) : NSObject <NSCopying>
+@property(nonatomic, copy) NSNumber* maxWidth;
+@property(nonatomic, copy) NSNumber* maxHeight;
+@end
+
 RTC_OBJC_EXPORT
 @interface RTC_OBJC_TYPE (RTCRtpEncodingParameters) : NSObject
 
@@ -56,6 +62,8 @@ RTC_OBJC_EXPORT
  */
 @property(nonatomic, copy, nullable) NSNumber *scaleResolutionDownBy;
 
+@property(nonatomic, copy, nullable) RTCResolutionRestriction *scaleResolutionDownTo;
+
 /** The SSRC being used by this encoding. */
 @property(nonatomic, readonly, nullable) NSNumber *ssrc;
 
diff --git a/sdk/objc/api/peerconnection/RTCRtpEncodingParameters.mm b/sdk/objc/api/peerconnection/RTCRtpEncodingParameters.mm
index a8349a1988..3f23e619a1 100644
--- a/sdk/objc/api/peerconnection/RTCRtpEncodingParameters.mm
+++ b/sdk/objc/api/peerconnection/RTCRtpEncodingParameters.mm
@@ -12,6 +12,20 @@
 
 #import "helpers/NSString+StdString.h"
 
+@implementation RTC_OBJC_TYPE (RTCResolutionRestriction)
+
+@synthesize maxWidth = _maxWidth;
+@synthesize maxHeight = _maxHeight;
+
+- (id)copyWithZone:(NSZone *)zone {
+  RTCResolutionRestriction *copy = [[RTCResolutionRestriction alloc] init];
+  copy.maxWidth = self.maxWidth;
+  copy.maxHeight = self.maxHeight;
+  return copy;
+}
+
+@end
+
 @implementation RTC_OBJC_TYPE (RTCRtpEncodingParameters)
 
 @synthesize rid = _rid;
@@ -21,6 +35,7 @@
 @synthesize maxFramerate = _maxFramerate;
 @synthesize numTemporalLayers = _numTemporalLayers;
 @synthesize scaleResolutionDownBy = _scaleResolutionDownBy;
+@synthesize scaleResolutionDownTo = _scaleResolutionDownTo;
 @synthesize ssrc = _ssrc;
 @synthesize bitratePriority = _bitratePriority;
 @synthesize networkPriority = _networkPriority;
@@ -59,6 +74,11 @@
       _scaleResolutionDownBy = [NSNumber
           numberWithDouble:*nativeParameters.scale_resolution_down_by];
     }
+    if (nativeParameters.scale_resolution_down_to) {
+      _scaleResolutionDownTo = [[RTCResolutionRestriction alloc] init];
+      _scaleResolutionDownTo.maxWidth = [NSNumber numberWithInt:nativeParameters.scale_resolution_down_to->width];
+      _scaleResolutionDownTo.maxHeight = [NSNumber numberWithInt:nativeParameters.scale_resolution_down_to->height];
+    }
     if (nativeParameters.ssrc) {
       _ssrc = [NSNumber numberWithUnsignedLong:*nativeParameters.ssrc];
     }
@@ -96,6 +116,11 @@
     parameters.scale_resolution_down_by =
         std::optional<double>(_scaleResolutionDownBy.doubleValue);
   }
+  if (_scaleResolutionDownTo != nil) {
+    webrtc::Resolution& r = parameters.scale_resolution_down_to.emplace();
+    r.width = _scaleResolutionDownTo.maxWidth.intValue;
+    r.height = _scaleResolutionDownTo.maxHeight.intValue;
+  }
   if (_ssrc != nil) {
     parameters.ssrc = std::optional<uint32_t>(_ssrc.unsignedLongValue);
   }
