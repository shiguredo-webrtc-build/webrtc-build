diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index 88109264e..672772b7d 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -485,8 +485,8 @@ config("compiler") {
     # faster.
     # On arm64, this is already the default behavior.
     if (current_cpu == "x64") {
-      asmflags += [ "-femit-dwarf-unwind=no-compact-unwind" ]
-      cflags += [ "-femit-dwarf-unwind=no-compact-unwind" ]
+      #asmflags += [ "-femit-dwarf-unwind=no-compact-unwind" ]
+      #cflags += [ "-femit-dwarf-unwind=no-compact-unwind" ]
     }
 
     # dsymutil is not available in the system, on bots, for rustc to call. Our
@@ -578,63 +578,6 @@ config("compiler") {
     ldflags += [ "-Wl,-z,keep-text-section-prefix" ]
   }
 
-  if (is_clang && !is_nacl) {
-    cflags += [ "-fcrash-diagnostics-dir=" + clang_diagnostic_dir ]
-    if (save_reproducers_on_lld_crash && use_lld) {
-      ldflags += [
-        "-fcrash-diagnostics=all",
-        "-fcrash-diagnostics-dir=" + clang_diagnostic_dir,
-      ]
-    }
-
-    # TODO(hans): Remove this once Clang generates better optimized debug info
-    # by default. https://crbug.com/765793
-    cflags += [
-      "-mllvm",
-      "-instcombine-lower-dbg-declare=0",
-    ]
-    if (!is_debug && use_thin_lto && is_a_target_toolchain) {
-      if (is_win) {
-        ldflags += [ "-mllvm:-instcombine-lower-dbg-declare=0" ]
-      } else {
-        ldflags += [ "-Wl,-mllvm,-instcombine-lower-dbg-declare=0" ]
-      }
-    }
-
-    # TODO(crbug.com/40283598): This causes binary size growth and potentially
-    # other problems.
-    # TODO(crbug.com/40284925): This isn't supported by Cronet's mainline llvm version.
-    if (default_toolchain != "//build/toolchain/cros:target" &&
-        !llvm_android_mainline) {
-      cflags += [
-        "-mllvm",
-        "-split-threshold-for-reg-with-hint=0",
-      ]
-      if (use_thin_lto && is_a_target_toolchain) {
-        if (is_win) {
-          ldflags += [ "-mllvm:-split-threshold-for-reg-with-hint=0" ]
-        } else {
-          ldflags += [ "-Wl,-mllvm,-split-threshold-for-reg-with-hint=0" ]
-        }
-      }
-    }
-
-    # TODO(crbug.com/40192287): Investigate why/if this should be needed.
-    if (is_win) {
-      cflags += [ "/clang:-ffp-contract=off" ]
-    } else {
-      cflags += [ "-ffp-contract=off" ]
-    }
-
-    # Enable ELF CREL (see crbug.com/357878242) for all platforms that use ELF
-    # (excluding toolchains that use an older version of LLVM).
-    # TODO(crbug.com/376278218): This causes segfault on Linux ARM builds.
-    if (is_linux && !llvm_android_mainline && current_cpu != "arm" &&
-        default_toolchain != "//build/toolchain/cros:target") {
-      cflags += [ "-Wa,--crel,--allow-experimental-crel" ]
-    }
-  }
-
   # C11/C++11 compiler flags setup.
   # ---------------------------
   if (is_linux || is_chromeos || is_android || (is_nacl && is_clang) ||
@@ -2014,7 +1957,7 @@ config("default_warnings") {
 
   # TODO(crbug.com/355446806): Clean up and enable.
   if (is_apple) {
-    ldflags += [ "-Wl,-no_warn_duplicate_libraries" ]
+    # ldflags += [ "-Wl,-no_warn_duplicate_libraries" ]
   }
 
   # Rust warnings
diff --git a/build/toolchain/apple/toolchain.gni b/build/toolchain/apple/toolchain.gni
index 9d8583fba..2943c300a 100644
--- a/build/toolchain/apple/toolchain.gni
+++ b/build/toolchain/apple/toolchain.gni
@@ -153,7 +153,8 @@ template("single_apple_toolchain") {
       toolchain_is_component_build = is_component_build
     }
 
-    prefix = rebase_path("$clang_base_path/bin/", root_build_dir)
+    #prefix = rebase_path("$clang_base_path/bin/", root_build_dir)
+    prefix = invoker.bin_path
     _cc = "${prefix}clang"
     _cxx = "${prefix}clang++"
 
